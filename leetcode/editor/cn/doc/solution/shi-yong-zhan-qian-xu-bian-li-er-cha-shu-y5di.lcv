* 动图

1. 将root压入栈内
2. 栈弹出节点，将弹出节点的右节点-左节点压入栈内。
3. 回到第2步，最终完成树的遍历
   ![pre.gif](https://pic.leetcode-cn.com/1621596376-zDgnKe-pre.gif)

* java

```java
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList();
        if(root==null){
            return result;
        }
        Stack<TreeNode> stack = new Stack();
        stack.push(root);
        while(!stack.isEmpty()){
            TreeNode node = stack.pop();
            result.add(node.val);
            if(node.right!=null){
                stack.push(node.right);
            }
            if(node.left!=null){
                stack.push(node.left);
            }
        }
        return result;
    }
}
```

