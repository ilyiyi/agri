* 

````
def stoneGameII(self, piles: List[int]) -> int:
    n = len(piles)
        # s 是piles的后缀和
    s = [0] * (n + 1)
    for i in range(n - 1, -1, -1):
        s[i] = s[i + 1] + piles[i]
            # dfs(i, M) 表示从第 i 堆石子开始取，最多能取 M 堆石子所能得到的最优值
    @cache
    def dfs(i, M):
        if i >= n:
            return 0
        # 如果剩余堆数小于等于 2M， 全拿走
        if i + M * 2 >= n:
            return s[i]
        best = 0
        # 枚举拿 x 堆的最优值
        for x in range(1, M * 2 + 1):
            best = max(best, s[i] - dfs(i + x, max(x, M)))
        return best
    return dfs(0, 1)
````

